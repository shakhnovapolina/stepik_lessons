{
  "uid" : "f5eb2a1c96d721d4",
  "name" : "test_guest_can_add_product_to_basket[offer7]",
  "fullName" : "test_product_page.TestProductPage#test_guest_can_add_product_to_basket",
  "historyId" : "87c815e2ff57b386ed8170cc72071f13",
  "time" : {
    "start" : 1623840424780,
    "stop" : 1623840427110,
    "duration" : 2330
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Different names of book in the basket and was added",
  "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x000001F690B8E188>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"abcd98cbfd30724475a1614477568642\")>\npromo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\",\n                              pytest.param(\"offer7\", marks=pytest.mark.xfail), \"offer8\",\n                              \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        page = ProductPage(browser,\n                           link + '/?promo=' + promo_offer)  # инициализируем Page Object, передаем в конструктор экземпляр драйвера и url адрес\n        page.open()  # открываем страницу\n        page.add_to_backet()\n        page.solve_quiz_and_get_code()\n>       page.check_add_book_alert()\n\nmodule_5\\test_product_page.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x000001F690CAD748>\n\n    def check_add_book_alert(self):\n        alert_name_book = self.browser.find_element(*ProductPageLocators.PRODUCT_ALERT_NAME_BOOK).text\n        header_name_book = self.browser.find_element(*ProductPageLocators.PRODUCT_HEADER_NAME_BOOK).text\n>       assert alert_name_book == header_name_book, \"Different names of book in the basket and was added\"\nE       AssertionError: Different names of book in the basket and was added\n\nmodule_5\\pages\\product_page.py:21: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1623840423728,
      "stop" : 1623840424777,
      "duration" : 1049
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Different names of book in the basket and was added",
    "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x000001F690B8E188>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"abcd98cbfd30724475a1614477568642\")>\npromo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\",\n                              pytest.param(\"offer7\", marks=pytest.mark.xfail), \"offer8\",\n                              \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        page = ProductPage(browser,\n                           link + '/?promo=' + promo_offer)  # инициализируем Page Object, передаем в конструктор экземпляр драйвера и url адрес\n        page.open()  # открываем страницу\n        page.add_to_backet()\n        page.solve_quiz_and_get_code()\n>       page.check_add_book_alert()\n\nmodule_5\\test_product_page.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x000001F690CAD748>\n\n    def check_add_book_alert(self):\n        alert_name_book = self.browser.find_element(*ProductPageLocators.PRODUCT_ALERT_NAME_BOOK).text\n        header_name_book = self.browser.find_element(*ProductPageLocators.PRODUCT_HEADER_NAME_BOOK).text\n>       assert alert_name_book == header_name_book, \"Different names of book in the basket and was added\"\nE       AssertionError: Different names of book in the basket and was added\n\nmodule_5\\pages\\product_page.py:21: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "208e1d61990e34a",
      "name" : "stdout",
      "source" : "208e1d61990e34a.txt",
      "type" : "text/plain",
      "size" : 42
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1623840427116,
      "stop" : 1623840429240,
      "duration" : 2124
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "suite",
    "value" : "test_product_page"
  }, {
    "name" : "subSuite",
    "value" : "TestProductPage"
  }, {
    "name" : "host",
    "value" : "LAPTOP-LR76FM0Q"
  }, {
    "name" : "thread",
    "value" : "26688-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_product_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "promo_offer",
    "value" : "'offer7'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "f5eb2a1c96d721d4.json",
  "parameterValues" : [ "'offer7'" ]
}